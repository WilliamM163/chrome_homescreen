/* Variables */
:root {
    --page-height: 100dvh;
    --page-width: 100dvw;
}

/* Default Page Settings */
* {
    box-sizing: border-box;
}

body {
    background-color: black;
    color: white;
    font-size: 16px;

    margin: 0;
}

.button {
    cursor: pointer;
}

/* ------ BACKGROUND ------  */
.background_image {
    /* Box Sizing */
    width: var(--page-width);
    height: var(--page-height);

    /* Positioning */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    
    /* Image Scaling */
    object-fit: cover;
}

/* ------ HOMESCREEN ------ */
.homescreen {
    padding: 10px;
}
.side_panel {
    /* Box Sizing */
    height: 100%;
    width: 100%;

    /* Display Flex */
    display: flex;
    flex-direction: column;
    gap: 10px;
    
    /* Overflow */
    overflow: scroll;
}
@media screen and (min-width: 901px) {
    .homescreen {
        /* Box Sizing */
        height: var(--page-height);
        width: var(--page-width);
    
        /* Grid */
        display: grid;
        grid-template-columns: 1fr 400px;
        grid-template-rows: 100%;
    
        /* Alignment */
        align-items: center;
        justify-items: center;
    }
}
@media screen and (max-width: 900px) {
    .homescreen {
        /* Box Sizing */
        height: var(--page-height);
        width: var(--page-width);
        padding-bottom: 10px;
        
        /* Overflow */
        overflow: scroll;
    
        /* Grid */
        display: grid;
        grid-template-rows: 300px 1fr;
    
        /* Alignment */
        align-items: center;
        justify-items: center;
    }
    .side_panel {
        overflow: visible;
    }
    .side_panel, .clock_and_search_widget {
        max-width: 600px;
    }
}
.clock_and_search_widget {
    padding: 50px 0;
}
.clock {
    margin: 1rem 0;

    /* Text */
    text-align: center;
    font-size: 4rem;
}
.search {
    /* Box Sizing */
    width: 100%;
    padding: 0.5em;

    /* Coloring */
    background-color: transparent;
    color: white;

    /* Text */
    text-align: center;
    font-family: inherit;
    font-size: 1.25rem;

    /* Border */
    border: 0;
    outline: 0;
}
.search::placeholder {
    text-align: center;
    color: white;

    /* Transition */
    transition: color 0.25s;

    font-family: inherit;
}
.search:focus::placeholder {
    color: transparent;
}
.widget_container {
    height: fit-content;
    width: 100%;
    padding: 10px 15px;
    background-color: rgba(255, 255, 255, 0.3);
    border-radius: 15px;
}


/* ------ SETTINGS ------ */
.settings {
    /* Settings position to absolute left */
    position: absolute;
    top: 0;
    left: 0;
    transition: left 0.25s ease;

    /* Boxing */
    width: 300px;
    height: 100vh;
    border-radius: 0 20px 20px 0;

    /* Colors */
    background-color: white;
    color: black;

    /* Elements Styling */
    padding: 15px;
    line-height: 3em;

    /* Z-Index */
    z-index: 1;
}

.title_bar {
    display: flex;
    justify-content: space-between;
}

.title_bar h1 {
    margin: 0;
}

.options {
    display: flex;
    flex-direction: column;
}

.options h2 {
    font-weight: normal;
    font-size: 18px;
}

.settings_button {
    /* Positioning */
    position: absolute;
    top: 0;
    left: 0;
    margin: 20px;
    cursor: pointer;
}

/* ------ TASKS ------ */
.task {
    display: flex;
    align-items: center;
    margin: 8px 0;
}
.widget_container > *, .task > * {
    margin: 0;
}
.task p {
    height: fit-content;
    padding-left: 5px;

    max-width: 400px;
}
.task:hover {
    color: rgba(255, 255, 255, 0.8);
}
.completed {
    font-style: italic;
    text-decoration: line-through;
}
.task > .fade {
    padding-left: 5px;
    opacity: 0;
    transition: opacity 0.15s;
}
.task:hover > .fade {
    opacity: 1;
}

/* ADDING TASKS */
.addTaskInput {
    /* Coloring */
    background-color: transparent;
    color: white;

    /* Box Sizing */
    width: 100%;

    /* Text */
    font-family: inherit;
    font-size: 1rem;

    /* Border */
    border: 0;
    outline: 0;

    /* Transition */
    opacity: 0;
    transition: opacity 0.25s;
}

.task_container:hover .addTaskInput, .task_container:focus .addTaskInput {
    opacity: 1;
}
.addTaskInput::placeholder {
    color: white;
    font-family: inherit;

    /* Transition */
    transition: color 0.25s;
}
.addTaskInput:focus::placeholder {
    color: transparent;
}